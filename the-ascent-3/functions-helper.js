//map
var map = ["00000000000","00000000000","00000000000","00000000000","00000000000","00000000000","00000000000","00000000000","00000000000","00000000040","00200000000","80000000000",
	"0FW0000Vy00","0000000yV00","0y00001uF00","07u0001mE00","03Y0001WU00","0000G01Wy00","0008000nu00","0000000V000","00000W00000","00000000000","000000W0000","00400002000","02080000000",
	"00000000000","0000WW00000","000W07W0000","00040300000","00208000000","00000000000","00000000000","00001000000","00000000000","00000000000","000000303y0","0000001W0y0","000000000F0",
	"00000000W60","00000000600","00000001000","00000000000","00005G00000","0000702ey00","00004G2u000","00006m28000","00002W3O000","00002W1G000","00002W1G000","00002cLG000","00002000000",
	"00002G2G000","0000200G000","0000000G000","0000200G000","0000210u000","0000230u000","000027Wu000","00003=+u000","00007===000","0000V===m00","0000+00Xo00","0001u1W4m00","0003m1WEO00",
	"0003m1WE000","0003m1mV000","0001W3==000","0000C7=W000","0000F=W3W00","00000000000","0000W000W00","00000400000","0001000WG00","00000000000","000803=0S00","00000E1W800","000G0O0W800",
	"000k0m0W100","000+0W3W000","000+0030000","000S0060200","00000=y0000","0000C0000W0","00000000000","007m0000000","00000000000","00000000010","00000000000","00Fu0000000","01==0003+00",
	"03==Xs07=WW","07==Z=0F=wu","WF==Z=0F==u","mF==p+0F==u","mV==py0V==u","uV==vu0V==u","u===u003==8","u+0=u1u0=u0","uu0Fu7y0000","vW07m7y0000","n7u7mN+0000","nC07mp+0008","X007mu+0008",
	"X007WyC600O","10GF0y03u0u","100V0=01=3m","100+0VW0==W","15Jy0F00V=0","1W7u00001u0","0m=W0000000","0Vy00000000","07W00=u03m0","00003+C0EV0","0Vu0F+60O1W","8V+0V+30m0m","8FZ0Vy10ZmO",
	"uF10VW3XW08","0500201X000","0480201X000","04802011600","m4FFY03100O","O6F03071==m","C6U01WU0m30","6FS00=u0O60","3=m00000Fy0","0V000000000","00000000000","00000000000"
];

//sun/yellow area
var yellowBackgrounds = [[50, 14, 1, 7], [51, 14, 1, 7], [51, 15, 1, 7], [52, 15, 1, 7], [52, 16, 1, 7], [53, 16, 9, 7], [52, 17, 9, 7], [53, 17, 9, 7], [53, 18, 9, 7], [54, 18, 9, 7], [53, 19, 9, 7], 
						[54, 19, 9, 7], [55, 19, 9, 7], [54, 20, 9, 7], [55, 20, 9, 7], [54, 21, 9, 7], [55, 21, 9, 7], [56, 21, 9, 7], [54, 22, 9, 7], [55, 22, 9, 7], [56, 22, 9, 7], [57, 22, 9, 7], 
						[55, 23, 9, 7], [56, 23, 9, 7], [57, 23, 9, 7], [55, 24, 9, 7], [56, 24, 9, 7], [57, 24, 9, 7], [58, 24, 9, 7], [56, 25, 9, 7], [57, 25, 9, 7], [58, 25, 9, 7], [59, 25, 9, 7], 
						[56, 26, 9, 7], [57, 26, 9, 7], [58, 26, 9, 7], [59, 26, 9, 7], [60, 26, 9, 7], [57, 27, 9, 7], [58, 27, 9, 7], [59, 27, 9, 7], [60, 27, 9, 7], [61, 27, 9, 7], [57, 28, 9, 7], 
						[58, 28, 9, 7], [59, 28, 9, 7], [60, 28, 9, 7], [61, 28, 9, 7], [58, 29, 9, 7], [59, 29, 9, 7], [60, 29, 9, 7], [61, 29, 9, 7], [62, 29, 9, 7], [0, 30, 9, 7], [58, 30, 9, 7], 
						[59, 30, 9, 7], [60, 30, 9, 7], [61, 30, 9, 7], [62, 30, 9, 7], [0, 31, 9, 7], [1, 31, 9, 7], [59, 31, 9, 7], [60, 31, 9, 7], [61, 31, 9, 7], [62, 31, 9, 7], [0, 32, 9, 7], 
						[1, 32, 9, 7], [2, 32, 9, 7], [60, 32, 9, 7], [61, 32, 9, 7], [62, 32, 9, 7], [0, 33, 9, 7], [1, 33, 9, 7], [2, 33, 9, 7], [60, 33, 9, 7], [61, 33, 9, 7], [62, 33, 9, 7], 
						[0, 34, 9, 7], [1, 34, 9, 7], [2, 34, 9, 7], [3, 34, 9, 7], [61, 34, 9, 7], [62, 34, 9, 7], [0, 35, 9, 7], [1, 35, 9, 7], [2, 35, 9, 7], [3, 35, 9, 7], [61, 35, 9, 7], 
						[62, 35, 9, 7], [0, 36, 9, 7], [1, 36, 9, 7], [2, 36, 9, 7], [3, 36, 9, 7], [4, 36, 9, 7], [62, 36, 9, 7], [0, 37, 9, 7], [1, 37, 9, 7], [2, 37, 9, 7], [3, 37, 9, 7], 
						[4, 37, 9, 7], [5, 37, 9, 7], [1, 38, 9, 7], [2, 38, 9, 7], [3, 38, 9, 7], [4, 38, 9, 7], [5, 38, 9, 7], [1, 39, 9, 7], [2, 39, 9, 7], [3, 39, 9, 7], [4, 39, 9, 7], 
						[5, 39, 9, 7], [6, 39, 9, 7], [1, 40, 9, 7], [2, 40, 9, 7], [3, 40, 9, 7], [4, 40, 9, 7], [5, 40, 9, 7], [6, 40, 9, 7], [7, 40, 9, 7], [2, 41, 9, 7], [3, 41, 9, 7], 
						[4, 41, 9, 7], [5, 41, 9, 7], [6, 41, 9, 7], [7, 41, 9, 7], [2, 42, 9, 7], [3, 42, 9, 7], [4, 42, 9, 7], [5, 42, 9, 7], [6, 42, 9, 7], [7, 42, 9, 7], [3, 43, 9, 7], 
						[4, 43, 9, 7], [5, 43, 9, 7], [6, 43, 9, 7], [7, 43, 9, 7], [8, 43, 9, 7], [3, 44, 9, 7], [4, 44, 9, 7], [5, 44, 9, 7], [6, 44, 9, 7], [7, 44, 9, 7], [8, 44, 9, 7], 
						[4, 45, 9, 7], [5, 45, 9, 7], [6, 45, 9, 7], [7, 45, 9, 7], [8, 45, 9, 7], [9, 45, 9, 7], [4, 46, 9, 7], [5, 46, 9, 7], [6, 46, 9, 7], [7, 46, 9, 7], [8, 46, 9, 7], 
						[9, 46, 9, 7], [5, 47, 9, 7], [6, 47, 9, 7], [7, 47, 9, 7], [8, 47, 9, 7], [9, 47, 9, 7], [4, 48, 9, 7], [5, 48, 9, 7], [6, 48, 9, 7], [7, 48, 9, 7], [8, 48, 9, 7], 
						[3, 49, 9, 7], [4, 49, 9, 7], [5, 49, 9, 7], [6, 49, 9, 7], [7, 49, 9, 7], [8, 49, 9, 7], [3, 50, 9, 7], [4, 50, 9, 7], [5, 50, 9, 7], [6, 50, 9, 7], [7, 50, 9, 7], 
						[2, 51, 9, 7], [3, 51, 9, 7], [4, 51, 9, 7], [5, 51, 9, 7], [6, 51, 9, 7], [2, 52, 9, 7], [3, 52, 9, 7], [4, 52, 9, 7], [5, 52, 9, 7], [1, 53, 9, 7], [2, 53, 9, 7], 
						[3, 53, 9, 7], [4, 53, 9, 7], [0, 54, 9, 7], [1, 54, 9, 7], [2, 54, 9, 7], [3, 54, 9, 7], [0, 55, 9, 7], [1, 55, 9, 7], [2, 55, 9, 7], [62, 55, 9, 7], [0, 56, 9, 7], 
						[1, 56, 9, 7], [62, 56, 9, 7], [0, 57, 9, 7], [61, 57, 9, 7], [62, 57, 9, 7], [0, 58, 9, 7], [60, 58, 9, 7], [61, 58, 9, 7], [62, 58, 9, 7], [59, 59, 9, 7], [60, 59, 9, 7], 
						[61, 59, 9, 7], [62, 59, 9, 7], [58, 60, 9, 7], [59, 60, 9, 7], [60, 60, 9, 7], [61, 60, 9, 7], [58, 61, 9, 7], [59, 61, 9, 7], [60, 61, 9, 7], [57, 62, 9, 7], [58, 62, 9, 7], 
						[59, 62, 9, 7], [60, 62, 9, 7], [57, 63, 9, 7], [58, 63, 9, 7], [59, 63, 9, 7], [56, 64, 9, 7], [57, 64, 9, 7], [58, 64, 9, 7], [59, 64, 9, 7], [56, 65, 9, 7], [57, 65, 9, 7], 
						[58, 65, 9, 7], [56, 66, 9, 7], [57, 66, 9, 7], [58, 66, 9, 7], [56, 67, 9, 7], [57, 67, 9, 7], [58, 67, 9, 7], [59, 67, 9, 7], [57, 68, 9, 7], [58, 68, 9, 7], [59, 68, 9, 7], 
						[57, 69, 9, 7], [58, 69, 9, 7], [59, 69, 9, 7], [60, 69, 9, 7], [57, 70, 9, 7], [58, 70, 9, 7], [59, 70, 9, 7], [60, 70, 9, 7], [58, 71, 9, 7], [59, 71, 9, 7], [60, 71, 9, 7], 
						[61, 71, 9, 7], [58, 72, 9, 7], [59, 72, 9, 7], [60, 72, 9, 7], [61, 72, 9, 7], [59, 73, 9, 7], [60, 73, 9, 7], [61, 73, 9, 7], [62, 73, 9, 7], [0, 74, 9, 7], [59, 74, 9, 7], 
						[60, 74, 9, 7], [61, 74, 9, 7], [62, 74, 9, 7], [0, 75, 9, 7], [59, 75, 9, 7], [60, 75, 9, 7], [61, 75, 9, 7], [62, 75, 9, 7], [0, 76, 9, 7], [60, 76, 9, 7], [61, 76, 9, 7], 
						[62, 76, 9, 7], [0, 77, 9, 7], [1, 77, 9, 7], [60, 77, 9, 7], [61, 77, 9, 7], [62, 77, 9, 7], [0, 78, 9, 7], [1, 78, 9, 7], [61, 78, 9, 7], [62, 78, 9, 7], [0, 79, 9, 7], 
						[1, 79, 9, 7], [61, 79, 9, 7], [62, 79, 9, 7], [0, 80, 9, 7], [1, 80, 9, 7], [2, 80, 9, 7], [62, 80, 9, 7], [0, 81, 9, 7], [1, 81, 9, 7], [2, 81, 9, 7], [62, 81, 9, 7], 
						[0, 82, 9, 7], [1, 82, 9, 7], [2, 82, 9, 7], [62, 82, 9, 7], [0, 83, 9, 7], [1, 83, 9, 7], [2, 83, 9, 7], [3, 83, 9, 7], [62, 83, 9, 7], [0, 84, 9, 7], [1, 84, 9, 7], 
						[2, 84, 9, 7], [3, 84, 9, 7], [0, 85, 9, 7], [1, 85, 9, 7], [2, 85, 9, 7], [3, 85, 9, 7], [0, 86, 9, 7], [1, 86, 9, 7], [2, 86, 9, 7], [3, 86, 9, 7], [4, 86, 9, 7], 
						[1, 87, 9, 7], [2, 87, 9, 7], [3, 87, 9, 7], [4, 87, 9, 7], [1, 88, 9, 7], [2, 88, 9, 7], [3, 88, 9, 7], [4, 88, 9, 7], [1, 89, 9, 7], [2, 89, 9, 7], [3, 89, 9, 7], 
						[4, 89, 9, 7], [5, 89, 9, 7], [2, 90, 9, 7], [3, 90, 9, 7], [4, 90, 9, 7], [5, 90, 9, 7], [1, 91, 9, 8], [2, 91, 9, 7], [3, 91, 9, 7], [4, 91, 9, 7], [5, 91, 9, 7], 
						[6, 91, 9, 8], [1, 92, 2, 8], [2, 92, 9, 7], [3, 92, 9, 7], [4, 92, 9, 7], [5, 92, 9, 7], [6, 92, 2, 8], [2, 93, 2, 8], [3, 93, 9, 7], [4, 93, 9, 7], [5, 93, 2, 8], 
						[3, 94, 2, 8], [4, 94, 2, 8], [12, 107, 3, 4]];

var yellowForeGrounds = [[53, 18, 7, 8], [54, 20, 7, 8], [56, 23, 7, 8], [56, 24, 7, 8], [58, 26, 7, 8], [0, 29, 9, 8], [58, 29, 7, 8], [59, 29, 7, 8], [60, 29, 7, 8], [0, 30, 7, 8], [60, 30, 7, 8], 
						[61, 30, 7, 8], [0, 31, 7, 8], [0, 33, 7, 8], [1, 33, 7, 8], [0, 34, 7, 8], [1, 34, 7, 8], [0, 35, 7, 8], [0, 36, 7, 8], [5, 37, 7, 8], [2, 38, 7, 8], 
						[5, 38, 7, 8], [2, 39, 7, 8], [2, 40, 7, 8], [7, 42, 7, 8], [5, 43, 7, 8], [7, 43, 7, 8], [5, 44, 7, 8], [7, 44, 7, 8], [8, 44, 7, 8], [5, 45, 7, 8], [7, 45, 7, 8], 
						[7, 46, 7, 8], [9, 46, 7, 8], [7, 47, 7, 8], [5, 48, 7, 8], [3, 49, 7, 8], [5, 49, 7, 8], [5, 50, 7, 8], [3, 51, 7, 8], [5, 51, 7, 8], [5, 52, 7, 8], [1, 54, 7, 8], 
						[2, 54, 7, 8], [3, 54, 7, 8], [55, 54, 9, 8], [54, 55, 9, 8], [62, 55, 7, 8], [55, 56, 9, 8], [56, 56, 9, 8], [62, 56, 7, 8], [55, 57, 9, 8], [57, 57, 9, 8], 
						[58, 58, 9, 8], [59, 58, 9, 8], [47, 59, 6, 5], [46, 60, 6, 5], [47, 60, 6, 5], [48, 60, 6, 8], [49, 60, 6, 8], [47, 61, 6, 8], [48, 61, 6, 8], [49, 61, 6, 8], 
						[52, 61, 6, 8], [45, 62, 6, 8], [48, 62, 6, 8], [49, 62, 6, 8], [52, 62, 5, 8], [49, 63, 6, 8], [50, 63, 6, 8], [51, 63, 5, 8], [52, 63, 5, 8], [53, 63, 9, 8], 
						[54, 63, 9, 8], [46, 64, 6, 8], [51, 64, 5, 8], [55, 64, 9, 8], [61, 64, 9, 8], [50, 65, 5, 8], [51, 65, 5, 8], [50, 66, 5, 8], [54, 66, 9, 8], [55, 68, 9, 8], 
						[54, 69, 9, 8], [59, 69, 7, 8], [59, 70, 7, 8], [58, 71, 7, 8], [59, 71, 7, 8], [60, 71, 7, 8], [58, 72, 7, 8], [60, 72, 7, 8], [59, 74, 7, 8], [61, 75, 7, 8], 
						[61, 76, 7, 8], [0, 77, 7, 8], [0, 78, 7, 8], [2, 82, 7, 8], [1, 83, 7, 8], [2, 83, 7, 8], [62, 83, 7, 8], [2, 84, 7, 8], [2, 85, 7, 8], [3, 88, 7, 8], [4, 88, 7, 8]];

var crackerPositions = [[49, 121], [50, 121], [51, 121], [52, 121], [53, 121], [54, 121],
						[16, 120], [17, 120],
						[28, 117], [28, 118], [28, 119],
						[35, 111], [36, 111], [37, 111],
						[40, 116]];
//usedGelatinColors starts with greens in it so that green isn't chosens
var usedGelatinColors = ["#0F0", "#080", "#8F0", "#0F8"];


function drawTextPrecise(text, x, y, fontSize, font, ) {

}

function invertList(list) {
	var obj = {};
	
	for (var s=0; s<list.length; s++) {
		obj[list[s]] = s;
	}
	
	return obj;
}

function spaceToScreen(x, y) {
	return [(x - camera.x) * camera.scale + (canvas.width / 2), (y - camera.y) * camera.scale + (canvas.height / 2)];
}

function screenToSpace(x, y) {
	return [((x - canvas.width / 2) / camera.scale) + camera.x, ((y - canvas.height / 2) / camera.scale) + camera.y];
}


function importMap(mapStrData) {
	return mapStrData.map(line => line.split("").map(char => +char));
	// return mapStrData.map(line => line.split("").map(char => base64_inv[char].toString(2).padStart(6, "0")));
}

function exportMap(mapArr) {
	var arrCopy = JSON.parse(JSON.stringify(mapArr));

	var finalArr = [];
	var buffer1 = "";
	
	//go through each line and turn the binary data into base64
	for (var l=0; l<arrCopy.length; l++) {
		finalArr[l] = "";

		while (arrCopy[l].length > 0) {
			buffer1 = "" + arrCopy[l][0];
			for (var g=1; g<6; g++) {
				buffer1 += arrCopy[l][g] ?? "0";
			}
			console.log(buffer1);
			finalArr[l] += base64[parseInt(buffer1, 2)];
			arrCopy[l] = arrCopy[l].slice(6);
		}
	}
	return JSON.stringify(finalArr);
}